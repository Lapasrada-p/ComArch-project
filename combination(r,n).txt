        lw      0       6       one             @6 = 1
        lw      0       1       n               @1 = input[n]
        lw      0       2       r               @2 = input[r]
        sw      5       1       stack           store n to stack
        add     5       6       5               increse stack pointer
        sw      5       2       stack           store r to stack
        add     5       6       5               increse stack pointer
        lw      0       4       Comb            prepare to call Comb
        jalr    4       7                       Call Comb
end     halt                                    end
Comb    lw      0       6       neg1
        add     5       6       5               decrese stack pointer
        lw      5       1       stack           load @1 = n from stack
        add     5       6       5               decrese stack pointer
        lw      5       1       stack           load @2 = r from stack
        beq     0       2       Loop            if r = 0 go to Loop
        beq     1       2       Loop            if n = r go to Loop
        lw      0       6       neg1             @6 = -1
        add     4       1       6           @4 = n-1
        sw      5       4       stack           store n-1 to stack
        add     5       6       5               increse stack pointer
        add     4       2       neg1            @4 = r-1
        sw      5       4       stack           store n-1 to stack
        add     5       6       5               increse stack pointer
        add     4       1       neg1            @4 = n-1
        sw      5       4       stack           store n-1 to stack
        add     5       6       5               increse stack pointer
        add     4       2       0               @4 = r
        sw      5       4       stack           store r to stack
        add     5       6       5               increse stack pointer
        lw      0       4       Comb            prepare to call
        jalr    4       6
Loop    lw      0       6       one             @6 = 1
        add     3       6       3               @3 += 1 (basecase)
        lw      0       4       Comb            @4 store Comb
        beq     5       0       end             if stack go to 0 then go to end of the program
        jalr    4       6
        jalr    7       6                       return
comAdr  .fill   Comb
one     .fill   1
neg1    .fill   -1
LAdr    .fill   Loop
n       .fill   7       input
r       .fill   3       input  
stack   .fill   0